\NeedsTeXFormat{LaTeX2e}

\title[CS 4300]{Intelligent Agents}
\author{Curtis Larsen}
\institute[Utah Tech University]{Utah Tech University---Computing}
\date{Fall 2025}

\mode<presentation>
{
  \usetheme{CambridgeUS}
  \setbeamertemplate{navigation symbols}{}
  \setbeamertemplate{enumerate items}[default]
  \setbeamertemplate{itemize items}[default]
}

\usepackage{amsfonts}
\usepackage{bm}
\usepackage[english]{babel}
\usepackage[utf8]{inputenc}
\usepackage{ae,aecompl}
\usepackage{helvet}
\usepackage[OT1]{fontenc}
\makeatletter\newcommand\@ptsize{0}\makeatother
\usepackage{emp,ifpdf}
\usepackage{hyperref}
\hypersetup{pdfstartview=FitH}
\usepackage{graphicx}
\ifpdf\DeclareGraphicsRule{*}{mps}{*}{}\fi

% use computer modern for math
\usefonttheme[onlymath]{serif}


% ===== agentslides.sty additions =====
% (Append below your existing content)

% --- Dependencies (load only if needed) ---
\makeatletter
\@ifpackageloaded{tikz}{}{\RequirePackage{tikz}}
\usetikzlibrary{arrows.meta,positioning,shapes.geometric}
\@ifpackageloaded{booktabs}{}{\RequirePackage{booktabs}}
\@ifpackageloaded{amsmath}{}{\RequirePackage{amsmath}}
\@ifpackageloaded{amssymb}{}{\RequirePackage{amssymb}}
\@ifpackageloaded{graphicx}{}{\RequirePackage{graphicx}}
\makeatother

% --- Common macros ---
\providecommand{\PEAS}{\textsc{PEAS}}

% Optional: course-level convenience (only define if not already set)
\providecommand{\course}{CS 4300}
\providecommand{\term}{Fall 2025}

% --- PEAS Table Helpers ---------------------------------------------
% Usage:
%   \begin{PEASTable}
%     \PEASHeader
%     \PEASrow{Self-driving car}{Safety, legality, comfort, efficiency}
%             {Urban roads, traffic, weather, rules}
%             {A: throttle, brake, steering; S: cameras, LiDAR, GPS, IMU}
%     \PEASrow{Chess program}{Win rate, time, search efficiency}
%             {Board states, rules, opponent}
%             {A: move pieces; S: board state}
%     \PEASBottom
%   \end{PEASTable}

\newenvironment{PEASTable}{%
  \begingroup
  \small
  \begin{tabular}{@{}p{2.9cm}p{3.9cm}p{3.4cm}p{3.8cm}@{}}
}{%
  \end{tabular}%
  \endgroup
}

\newcommand{\PEASHeader}{%
  \toprule
  \textbf{Agent} & \textbf{Performance (P)} & \textbf{Environment (E)} & \textbf{Actuators (A)} / \textbf{Sensors (S)} \\
  \midrule
}
\newcommand{\PEASrow}[4]{#1 & #2 & #3 & #4\\\addlinespace}
\newcommand{\PEASBottom}{\bottomrule}


\RequirePackage{xparse}

% --- Agent–Environment Loop (TikZ) ----------------------------------
% Draws the classic two-box loop with labeled arrows.
% Usage (all labels optional except the two nodes):
%   \AgentEnvLoop{Environment}{Agent}[Percepts][Actions][Performance signal]
%
% Options:
%   - Pass TikZ options with optional arg, e.g. \AgentEnvLoop[scale=.95]{...}{...}
%
\newcommand{\AgentEnvLoop}[5][]{%
  % #1 = tikzpicture options (optional)
  % #2 = Environment label
  % #3 = Agent label
  % #4 = Percepts label (optional; default "Percepts")
  % #5 = Actions label  (optional; default "Actions")
  \begingroup
  \def\perclabel{\if\relax\detokenize{#4}\relax Percepts\else #4\fi}%
  \def\actlabel{\if\relax\detokenize{#5}\relax Actions\else #5\fi}%
  \tikzset{
    agentbox/.style={rectangle, rounded corners=3pt, draw, minimum width=3.4cm, minimum height=1.0cm, align=center},
    looparrow/.style={->, >=Latex, thick}
  }
  \begin{tikzpicture}[node distance=2.0cm, #1]
    \node[agentbox] (env) {#2};
    \node[agentbox, right=of env] (agent) {#3};
    \draw[looparrow] (env.north east) .. controls +(1,1) and +(-1,1) .. node[above]{\perclabel} (agent.north west);
    \draw[looparrow] (agent.south west) .. controls +(-1,-1) and +(1,-1) .. node[below]{\actlabel} (env.south east);
  \end{tikzpicture}
  \endgroup
}

\RenewDocumentCommand{\AgentEnvLoop}{O{} m m O{Percepts} O{Actions}}{%
  \begingroup
  \tikzset{
    agentbox/.style={rectangle, rounded corners=3pt, draw,
                     minimum width=3.4cm, minimum height=1.0cm, align=center},
    looparrow/.style={->, >=Latex, thick}
  }
  \begin{tikzpicture}[node distance=2.5cm, #1]
    \node[agentbox] (env) {#2};
    \node[agentbox, right=of env] (agent) {#3};
    % Percepts arrow (top, left→right)
    \draw[looparrow] (env.north east) .. controls +(1,1) and +(-1,1) ..
      node[midway,above]{#4} (agent.north west);
    % Actions arrow (bottom, right→left)
    \draw[looparrow] (agent.south west) .. controls +(-1,-1) and +(1,-1) ..
      node[midway,below]{#5} (env.south east);
  \end{tikzpicture}
  \endgroup
}


% --- Mini TOC helpers for beamer decks -------------------------------
% Drop these in frames to show progress-local TOCs without retyping options.
\providecommand{\SectionTOC}{\tableofcontents[currentsection]}
\providecommand{\SubsectionTOC}{\tableofcontents[currentsection,currentsubsection,subsectionstyle=show/shaded/hide]}


% --- SVG support (auto-size via Inkscape) ---
\usepackage{svg}                 % provides \includesvg with size detection
\svgpath{{figures_svg/}}         % where your .svg files live
\graphicspath{{figures_svg/}{figures/}} % fallback search paths (SVGs first)

% Recommended: compile with --shell-escape and have Inkscape 1.x installed.
% Example latexmk: latexmk -pdf -shell-escape main.tex

% We’re not using LaTeX-over-SVG text overlays; keep it simple:
\setsvg{inkscapelatex=false}


% In agentsslides.sty or your preamble:

% 1) Ensure svg is loaded
\makeatletter
\@ifpackageloaded{svg}{}{\RequirePackage{svg}}
\makeatother

% --- in agentsslides.sty (or your preamble) ---
\RequirePackage{currfile}  % gives \currfileabsdir (absolute dir of the current .tex file)

% SVG-first, PNG/PDF fallback, using ABSOLUTE paths so Inkscape never sees a relative one.
\makeatletter
% --- In your preamble or agentsslides.sty ---
\RequirePackage{graphicx}

% \fig[<includegraphics options>]{<base-filename-without-extension>}
% Preference order: PNG (figures/ then cwd) → PDF → JPG/JPEG → raw name
\newcommand{\fig}[2][]{%
  % PNGs first
  \IfFileExists{figures/#2.png}{\includegraphics[#1]{figures/#2.png}}{%
    \IfFileExists{#2.png}{\includegraphics[#1]{#2.png}}{%
      % then PDF
      \IfFileExists{figures/#2.pdf}{\includegraphics[#1]{figures/#2.pdf}}{%
        \IfFileExists{#2.pdf}{\includegraphics[#1]{#2.pdf}}{%
          % then JPG/JPEG
          \IfFileExists{figures/#2.jpg}{\includegraphics[#1]{figures/#2.jpg}}{%
            \IfFileExists{#2.jpg}{\includegraphics[#1]{#2.jpg}}{%
              \IfFileExists{figures/#2.jpeg}{\includegraphics[#1]{figures/#2.jpeg}}{%
                \IfFileExists{#2.jpeg}{\includegraphics[#1]{#2.jpeg}}{%
                  % last resort: let graphicx try whatever is available
                  \includegraphics[#1]{#2}%
                }%
              }%
            }%
          }%
        }%
      }%
    }%
  }%
}
